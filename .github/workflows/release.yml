name: Release

on:
  push:
    tags:
      - 'v*.*.*'  # Matches v1.0.0, v2.1.3, etc.

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write  # For provenance
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install asdf & tools
        uses: asdf-vm/actions/install@v4

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      # Validate everything before release
      - name: Run tests
        run: pnpm test

      - name: TypeScript Check
        run: pnpm tsc --noEmit

      - name: Validate package
        run: pnpm pack --dry-run

      # Extract version from tag
      - name: Get version from tag
        id: get_version
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          echo "Releasing version: $VERSION"

      # Update package.json version to match tag
      - name: Update package version
        run: |
          pnpm version ${{ steps.get_version.outputs.VERSION }} --no-git-tag-version

      # Create GitHub release
      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
          body: |
            ## Changes in this Release
            
            See the [CHANGELOG](https://github.com/narthur/doctool/blob/main/CHANGELOG.md) for detailed information.
            
            ## Installation
            
            ```bash
            npm install -g doctool@${{ steps.get_version.outputs.VERSION }}
            ```
            
            ## What's Changed
            - Full changelog available at: https://github.com/narthur/doctool/compare/v${{ steps.get_version.outputs.VERSION }}...main

      # Publish to npm
      - name: Setup npm authentication
        run: |
          echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > ~/.npmrc

      - name: Publish to npm
        run: |
          # Add provenance for supply chain security
          npm publish --access public --provenance
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      # Upload package as release asset
      - name: Create package tarball
        run: |
          pnpm pack
          PACKAGE_FILE=$(ls doctool-*.tgz)
          echo "PACKAGE_FILE=$PACKAGE_FILE" >> $GITHUB_ENV

      - name: Upload package to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./${{ env.PACKAGE_FILE }}
          asset_name: ${{ env.PACKAGE_FILE }}
          asset_content_type: application/gzip

  # Notify after successful release
  post-release:
    needs: release
    runs-on: ubuntu-latest
    if: success()
    
    steps:
      - name: Notify success
        run: |
          echo "ðŸŽ‰ Successfully released doctool ${{ github.ref }}"
          echo "ðŸ“¦ Available on npm: npm install -g doctool"
          echo "ðŸ”— GitHub Release: ${{ github.server_url }}/${{ github.repository }}/releases/tag/${{ github.ref_name }}"
